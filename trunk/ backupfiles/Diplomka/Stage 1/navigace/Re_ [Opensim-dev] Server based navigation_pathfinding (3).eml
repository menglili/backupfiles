Return-Path: <opensim-dev-bounces@lists.berlios.de>
X-Original-To: v.rovensky@lit.cz
Delivered-To: v.rovensky@lit.cz
Received: from localhost (localhost.localdomain [127.0.0.1])
	by mail.bezdrat.net (Postfix) with ESMTP id 755AFC075
	for <v.rovensky@lit.cz>; Thu, 24 Dec 2009 01:41:33 +0100 (CET)
X-Virus-Scanned: amavisd-new at mail.bezdrat.net
Received: from mail.bezdrat.net ([127.0.0.1])
	by localhost (mail.bezdrat.net [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id CHkwNceTYEg8 for <v.rovensky@lit.cz>;
	Thu, 24 Dec 2009 01:41:30 +0100 (CET)
Received: from mail.berlios.de (bat.berlios.de [195.37.77.135])
	by mail.bezdrat.net (Postfix) with ESMTP id 5BE2CC01C
	for <v.rovensky@lit.cz>; Thu, 24 Dec 2009 01:41:30 +0100 (CET)
Received: from bat.berlios.de (localhost [127.0.0.1])
	by mail.berlios.de (Postfix) with ESMTP id AE8181A75F5;
	Thu, 24 Dec 2009 01:41:17 +0100 (CET)
X-Original-To: opensim-dev@lists.berlios.de
Delivered-To: opensim-dev@lists.berlios.de
X-Greylist: delayed 1686 seconds by postgrey-1.32 at bat;
	Thu, 24 Dec 2009 01:41:10 CET
Received: from zeus.utanet.fi (ns.utanet.fi [80.75.96.40])
	by mail.berlios.de (Postfix) with ESMTP id 123843DC99
	for <opensim-dev@lists.berlios.de>;
	Thu, 24 Dec 2009 01:41:10 +0100 (CET)
Received: from [192.168.0.100] (addr-85-23-5-36.suomi.net [85.23.5.36])
	(using TLSv1 with cipher DHE-RSA-AES256-SHA (256/256 bits))
	(No client certificate requested)
	by zeus.utanet.fi (Postfix) with ESMTP id 48DF070050
	for <opensim-dev@lists.berlios.de>;
	Thu, 24 Dec 2009 02:13:03 +0200 (EET)
Message-ID: <4B32B20D.1030506@kyperjokki.fi>
Date: Thu, 24 Dec 2009 02:13:01 +0200
From: Toni Alatalo <antont@kyperjokki.fi>
User-Agent: Thunderbird 2.0.0.23 (Windows/20090812)
MIME-Version: 1.0
To: opensim-dev@lists.berlios.de
References: <CA35720607DF43B8B3FBB6649772C893@fine8f794b3772>
	<34cc66250912230721l522097ecufdc12dc729c8d9e1@mail.gmail.com>
In-Reply-To: <34cc66250912230721l522097ecufdc12dc729c8d9e1@mail.gmail.com>
Subject: Re: [Opensim-dev] Server based navigation/pathfinding
X-BeenThere: opensim-dev@lists.berlios.de
X-Mailman-Version: 2.1.9
Precedence: list
Reply-To: opensim-dev@lists.berlios.de
List-Id: <opensim-dev.lists.berlios.de>
List-Unsubscribe: <https://lists.berlios.de/mailman/listinfo/opensim-dev>,
	<mailto:opensim-dev-request@lists.berlios.de?subject=unsubscribe>
List-Archive: <https://lists.berlios.de/pipermail/opensim-dev>
List-Post: <mailto:opensim-dev@lists.berlios.de>
List-Help: <mailto:opensim-dev-request@lists.berlios.de?subject=help>
List-Subscribe: <https://lists.berlios.de/mailman/listinfo/opensim-dev>,
	<mailto:opensim-dev-request@lists.berlios.de?subject=subscribe>
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit
Sender: opensim-dev-bounces@lists.berlios.de
Errors-To: opensim-dev-bounces@lists.berlios.de

Teravus Ovares kirjoitti:
> stored on the simulator and there's a chance that if you start now, in
> a month or two, the module will be obsolite because the API changed
> significantly.     I would wait until about 2 weeks after 0.7 is
> tagged..     which should be sometime in January.
>   

That is a valid point, and perhaps good advice, but I still think that 
you don't necessarily need to wait to proceed with new things like this 
that use the scene data. I believe that if this was done now, it would 
be quite simple to port to the new system later. After all, very many 
things in opensim itself and other modules need to be ported, so the 
refactoring can't make all those obsolete, 'cause we'd end up with 
having no functionality at all. The same data remains there, just 
accessed in a different way which doesn't make much of a difference to 
an algorithm like A* .. It doesn't change basically anything about the 
actual work a module like this need to do (generate a waypoint graph, 
have a a* backed autopilot impl).

So if the original poster wants it quick, can just do it, and the work 
won't be wasted - just needs some porting later. If is not in a hurry 
and wants to save the trouble of learning the scene API twice, first the 
old and then the new, is a good idea to wait indeed.

> 2009/12/23 V.Rovensky <v.rovensky@lit.cz>:
>   
>> to find the route for my bot. I was thinking I could create an invisible
>> prim for every waypoint and reimplement the autopilot function so it suits
>> my needs a little more. To do this I suppose I need to do the following:
>>     

With these manual markers this seems quite simple. Before noticed this 
part, was thinking that the navigability of different kind of geoms 
might be very difficult to deduce from just the visible geometry or even 
collision data, especially if you'd need to support arbitrary kind of 
builds by users etc, query the physics code or something etc.

>>     1) Be able to access all the region's prims, their locations and shapes
>> to create and manage the graph of waypoints
>>     

How do you get the connections for the graph if you have the points 
only? And how do you know which of the scene entities are waypoint 
markers - use simply some naming convention perhaps?

>>     2) Be able to reimplement the autopilot function, so whenever the
>> client starts autopilot, my method gets called and sends the client along
>> the computed route.
>> Could this be done via RegionModules? I'm fairly new to OpenSim development,
>> so any tips that could point me the right way would be greatly appreciated.
>>     

Seems like a good fit for region modules to me, 'cause what they get 
from the sim is a reference to a scene object where you can get all the 
scene objects (i hate the term 'prim' for them which is just one way to 
define geometry :p) .. am not sure how you'd go about hooking this to 
the existing autopilot mechanism, but I'm sure it's possible somehow. 
And that part (if it relates to scriptengine etc) I guess won't be 
affected by the sceneobjectgroup/sceneobjectpart refactor (much) at all.

If/as you just need the positions of your custom scene objects to form 
the graph from those nodes, my guess actually is that the refactor may 
result in very little code changes to this tool (5-10 lines change 
perhaps, just the call how to get all entities (of a type?), and then 
how to read position data from them? is just an ignorant guess, not 
knowing much of the details of the current impl or the new plans .. i 
know how a* works in our games though and what the opensim primdata is).

A big idea behind the upcoming refactoring is that the core would 
support applications having arbitrary data about scenes - for example 
navigation graphs. In the new model I think a navigation graph like 
yours could be a component type, which you could register to the system 
from your module and the core could then store it etc. And perhaps 
support communicating it to the outside too - we have the same 
entity-component model in the Naali viewer, and the idea is that we'd 
then support having custom components both on the viewer and the server 
and networking to sync the data in between. So that you could just make 
the graph in the viewer with a custom editor for that, and it'd be 
synched to the server as well, and you could e.g. do a* on eiher or both 
depending on needs.

>> V.Rovensky
>>     

~Toni

_______________________________________________
Opensim-dev mailing list
Opensim-dev@lists.berlios.de
https://lists.berlios.de/mailman/listinfo/opensim-dev