Return-Path: <libsl-dev-bounces@openmv.org>
X-Original-To: v.rovensky@lit.cz
Delivered-To: v.rovensky@lit.cz
Received: from localhost (localhost.localdomain [127.0.0.1])
	by mail.bezdrat.net (Postfix) with ESMTP id 9AFF4C047
	for <v.rovensky@lit.cz>; Mon, 21 Dec 2009 20:36:36 +0100 (CET)
X-Virus-Scanned: amavisd-new at mail.bezdrat.net
Received: from mail.bezdrat.net ([127.0.0.1])
	by localhost (mail.bezdrat.net [127.0.0.1]) (amavisd-new, port 10024)
	with ESMTP id QaGzBGFzJctA for <v.rovensky@lit.cz>;
	Mon, 21 Dec 2009 20:36:35 +0100 (CET)
Received: from nimitz.openmetaverse.org (nimitz.openmetaverse.org [209.31.180.34])
	by mail.bezdrat.net (Postfix) with ESMTP id F0A42C027
	for <v.rovensky@lit.cz>; Mon, 21 Dec 2009 20:36:34 +0100 (CET)
Received: from nimitz.openmetaverse.org (localhost [127.0.0.1])
	by nimitz.openmetaverse.org (Postfix) with ESMTP id 5EA10BC49D6;
	Mon, 21 Dec 2009 11:36:33 -0800 (PST)
X-Original-To: libsl-dev@openmv.org
Delivered-To: libsl-dev@openmv.org
Received: from web63108.mail.re1.yahoo.com (web63108.mail.re1.yahoo.com
	[69.147.97.3])
	by nimitz.openmetaverse.org (Postfix) with SMTP id 13FF9BC49CE
	for <libsl-dev@openmv.org>; Mon, 21 Dec 2009 11:36:29 -0800 (PST)
Received: (qmail 50684 invoked by uid 60001); 21 Dec 2009 19:36:29 -0000
DKIM-Signature: v=1; a=rsa-sha256; c=relaxed/relaxed; d=yahoo.com; s=s1024;
	t=1261424189; bh=DFNh6UPnTH+1G9dGeyxr1BRyBinDwk8X5pUGuEDTm6k=;
	h=Message-ID:X-YMail-OSG:Received:X-Mailer:Date:From:Subject:To:MIME-Version:Content-Type:Content-Transfer-Encoding;
	b=Cjuo9XflQAWKhCqzHNZslh3Xmm7pC65SDvpAJvi1J6ySIFymbGgmJHAeEbumaVSh3PSydwwIXedErY+/CDikPlqHZbsozwxtJEYJDtCHyZhs90ItM6Gnu/+q9tVhwVf21t3e0MzDGQE2OMjG4qqj+uQzl/PYsEf/W66ghwVpiJk=
DomainKey-Signature: a=rsa-sha1; q=dns; c=nofws; s=s1024; d=yahoo.com;
	h=Message-ID:X-YMail-OSG:Received:X-Mailer:Date:From:Subject:To:MIME-Version:Content-Type:Content-Transfer-Encoding;
	b=zupqNNzq/O+tw7bz1VM37sV7j4HCpR2IbwpaUQ+Z4GfkWUTwJj9Ty+vohnCKC+P5IRqZ7H3opWnGVPfqrIrwmo3ByrzE7ga29rR0j6s9r72S67t8gzs82CTj3UbQ8wu0WBrHUe1FYkjSxUI+0goDy0XGjqVx4VvDzHOep5oRyw8=;
Message-ID: <187773.50533.qm@web63108.mail.re1.yahoo.com>
X-YMail-OSG: weNR92wVM1m.Gf3SFRR._iM8vcBNkczz1MeWPTU8lemC6Vt.7Wcl1N4GBz1Hm6RH_1J2Yt5B09G2HDRRBeIv82frUVDDqgz5AsA4PtXbAnYnq9dB_cPlT56QVKa.JVRDqN8gGCCUTLBIRPvS20xULYcOcqXaPcNp5SCQmNxsjB6aNjN5KTA.PrpFSHi8QP__Gcsd9yT_rMkHBggzNFlogMurhkBmBzGcpkS2YinSnhQaeKf0PIWg3sGP95m2q9yzE5sshc.bfC0t14MM1dmQbV0gIDZjuU8Fl0_DZ6BEf4KprGbCkr9bvx.DqR4b32MtM0odXrgIiOz2.fBrgTnDk3ZyPjzRln53XariiYGg.s6RmW0t7FTQ3ed4ZA--
Received: from [68.3.199.81] by web63108.mail.re1.yahoo.com via HTTP;
	Mon, 21 Dec 2009 11:36:28 PST
X-Mailer: YahooMailClassic/9.0.19 YahooMailWebService/0.8.100.260964
Date: Mon, 21 Dec 2009 11:36:28 -0800 (PST)
From: Karen Palen <karen_palen@yahoo.com>
To: libsl-dev@openmv.org
MIME-Version: 1.0
Subject: [libsl-dev] Fw: Re:  Navigation / Pathfinding
X-BeenThere: libsl-dev@openmv.org
X-Mailman-Version: 2.1.11
Precedence: list
List-Id: libopenmetaverse development <libsl-dev.openmv.org>
List-Unsubscribe: <http://openmv.org/cgi-bin/mailman/options/libsl-dev>,
	<mailto:libsl-dev-request@openmv.org?subject=unsubscribe>
List-Archive: <http://openmv.org/pipermail/libsl-dev>
List-Post: <mailto:libsl-dev@openmv.org>
List-Help: <mailto:libsl-dev-request@openmv.org?subject=help>
List-Subscribe: <http://openmv.org/cgi-bin/mailman/listinfo/libsl-dev>,
	<mailto:libsl-dev-request@openmv.org?subject=subscribe>
Content-Type: text/plain; charset="iso-8859-1"
Content-Transfer-Encoding: quoted-printable
Sender: libsl-dev-bounces@openmv.org
Errors-To: libsl-dev-bounces@openmv.org

Forgot to include the group in this - sorry.

--- On Mon, 12/21/09, Karen Palen <karen_palen@yahoo.com> wrote:

> From: Karen Palen <karen_palen@yahoo.com>
> Subject: Re: [libsl-dev] Navigation / Pathfinding
> To: "V.Rovensky" <v.rovensky@lit.cz>
> Date: Monday, December 21, 2009, 11:33 AM
> I too am no expert at LSL scripting,
> so I will have to leave the details of question 1 to others.
> Right now my efforts are directed at adapting the OpenSim
> test program PCampBot for avatars which requires C#. The
> reason for doing it at the server level is that you use
> dramatically fewer resources, especially communications
> bandwidth.
> =

> I would be delighted to hear about other efforts along
> those lines and have a chance to collaborate.
> =

> I have much more practical experience with question 2
> though! I would suggest that you simply model the objects as
> rectangles on the walking plane (or cubes if you are
> flying). =

> =

> The practical results in object avoidance should be minimal
> while the computing cost and complexity is dramatically
> less!
> =

> The only problems should be things like a huge U shaped
> wall, say around a building. In this case you probably need
> to have the capability to add this shape via a ".ini" file
> of some sort.
> =

> Even on OpenSim with its 256M prims though I am finding
> that a simple cube for a wall/fence etc. is much easier to
> handle and position correctly that a complex hollow shape.
> =

> You will need to accept that every routing algorithm short
> of a full blown Lee router and a few Terabytes of RAM will
> have some sort of limitations.
> =

> The trick is to find one that works within your constraints
> well enough to do the job. That is where routing becomes
> more "art" than "science" :-(
> =

> I a situation like a PC board or chip layout the goal is
> always to cram the most onto the board/chip possible so 90%
> of the effort and compute resources are always directed at
> the "last wire" problem. =

> =

> For an Avatar walking/flying across a Sim however you don't
> need that level of efficiency and in fact a certain amount
> of "wandering" in a complex maze would add realism.
> =

> With an OpenSim/SL based system I would expect that a 256 X
> 256 single byte array would work nicely, although this may
> exceed some internal limits in LSL.
> =

> Karen
> =

> --- On Mon, 12/21/09, V.Rovensky <v.rovensky@lit.cz>
> wrote:
> =

> > From: V.Rovensky <v.rovensky@lit.cz>
> > Subject: Re: [libsl-dev] Navigation / Pathfinding
> > To: "Karen Palen" <karen_palen@yahoo.com>
> > Date: Monday, December 21, 2009, 8:13 AM
> > Hi, thank you for the quick response
> > I've got some follow-up questions about what you
> wrote,
> > some quite dumb as I'm just starting with libSL, so
> please
> > bear with the newbie :o)
> > =

> > Ad 1) Is there a way to do this programatically? I
> havent
> > found any means of attaching a LSL script to object
> in
> > libSL.
> > Ad 2) Ok, what I'm probably going to do is create a
> graph
> > consisting of locations inbetween which there are no
> > obstacles - to create such a graph I need information
> about
> > all the primitives in the Sim. I know how to get
> primitives'
> > locations, but how can I get the shapes (geometry)?
> > =

> > Thanks for your time
> > V.Rovensky
> > =

> > ----- Original Message ----- From: "Karen Palen"
> <karen_palen@yahoo.com>
> > To: <v.rovensky@lit.cz>
> > Sent: Sunday, December 20, 2009 10:25 PM
> > Subject: Re: [libsl-dev] Navigation / Pathfinding
> > =

> > =

> > > This really boils down to two questions:
> > > =

> > > 1) Moving along a path to a predefined waypoint
> > > =

> > > There is an LSL function llMoveToTarget which
> does
> > this for you and it is presently implemented in
> OpenSim.
> > Simply set one llMoveToTarget for each waypoint and
> your
> > object/avatar will follow that path. There is also an
> event
> > trigger for "got to target" BTW.
> > > =

> > > 2) Avoiding obstacles in the way
> > > =

> > > This is a MUCH harder problem which has yet to
> have a
> > general solution! Small obstacles (e.g. a post) can
> simply
> > be avoided by nudging the avatar randomly. More
> difficult is
> > a 'U' shaped object which can "trap" the avatar.
> > > =

> > > The general case of a maze is a very compute
> intensive
> > operation - see http://en.wikipedia.org/wiki/Lee_algorithm (original
> > reference published in 1961!). This is one of the
> > fundamental problems of automated design of
> electronic
> > circuits.
> > > =

> > > Hope this helps.
> > > =

> > > Karen
> > > --- On Sun, 12/20/09, v.rovensky@lit.cz
> > <v.rovensky@lit.cz>
> > wrote:
> > > =

> > >> From: v.rovensky@lit.cz
> > <v.rovensky@lit.cz>
> > >> Subject: [libsl-dev] Navigation /
> Pathfinding
> > >> To: libsl-dev@openmv.org
> > >> Date: Sunday, December 20, 2009, 11:57 AM
> > >> Hi everyone
> > >> =

> > >> I went through the documentation and mailing
> lists
> > trying
> > >> to find the best way
> > >> to make my avatar move between locations and
> > evade
> > >> obstacles, but I still can't
> > >> get it right - could someone please throw
> some
> > ideas at me
> > >> about how I could
> > >> implement pathfinding / navigation? Say I
> have two
> > points A
> > >> and B, how could I
> > >> make the avatar get from one to another
> while
> > avoiding any
> > >> obstacles? The more
> > >> reliable the better.
> > >> Ideally, I'd like to somehow construct a set
> of
> > "waypoints"
> > >> from from the Sim's
> > >> geometry, create a graph based on
> accessibility
> > between
> > >> them and perform
> > >> something like A* on it. Could this be done?
> Is
> > there even
> > >> a way to access the
> > >> Sim's entire geometry (like the primitives'
> shapes
> > and
> > >> sizes)?
> > >> Any thoughts/hints are welcome
> > >> =

> > >> Thanks for all your time
> > >> V.Rovensky
> > >> =

> > >> =

> > >>
> _______________________________________________
> > >> libsl-dev mailing list
> > >> libsl-dev@openmv.org
> > >> http://openmv.org/cgi-bin/mailman/listinfo/libsl-dev
> > >> =

> > > =

> > > =

> > > =

> > =

> > =

> =

> =

> =A0 =A0 =A0 =

> =



      =

_______________________________________________
libsl-dev mailing list
libsl-dev@openmv.org
http://openmv.org/cgi-bin/mailman/listinfo/libsl-dev